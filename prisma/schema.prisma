// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId     Int     @id @default(autoincrement())
  first_name String
  last_name  String
  address    String
  cart       Cart?
  order      Order[]
}

model Product {
  productId    Int            @id @default(autoincrement())
  name         String
  description  String
  price        Float
  stock        Int
  ProductOrder ProductOrder[]
  ProductCart  ProductCart[]
}

model Cart {
  cartId Int @id @default(autoincrement())

  user   User @relation(fields: [userId], references: [userId])
  userId Int  @unique

  ProductCart ProductCart[]
}

model Order {
  orderId Int      @id @default(autoincrement())
  date    DateTime @default(now())
  status  Status

  User   User? @relation(fields: [userId], references: [userId])
  userId Int?

  productOrder ProductOrder[]
}

model ProductOrder {
  productId Int
  product   Product @relation(fields: [productId], references: [productId])

  orderId Int
  order   Order @relation(fields: [orderId], references: [orderId])

  quantity Int

  @@id([productId, orderId])
}

model ProductCart {
  productId Int
  product   Product @relation(fields: [productId], references: [productId])

  cartId Int
  cart   Cart @relation(fields: [cartId], references: [cartId])

  quantity Int

  @@id([productId, cartId])
}

enum Status {
  ORDERED
  SHIPPED
  RECEIVED
}
